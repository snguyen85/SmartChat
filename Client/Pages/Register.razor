@page "/register"
@inject SmartAuthenticationService AuthService
@inject NavigationManager NavigationManager

<h1>Register</h1>

<EditForm Model="@RegisterModel" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator/>
    <MudGrid>
        <MudItem xs="12" sm="7">
            <MudCard>
                <MudCardHeader>
                    <MudText Color="@Color.Error">
                        <ValidationSummary />
                        @if (ShowErrors)
                        {
                            @foreach (var error in Errors)
                            {
                                <p>@error</p>
                            }
                        }
                    </MudText>
                </MudCardHeader>
                <MudCardContent>
                    <MudTextField Label="Username" HelperText="Max. 8 characters"
                                  @bind-Value="RegisterModel.Username" For="@(() => RegisterModel.Username)"/>
                    <MudTextField Label="Password" HelperText="Choose a strong password" Class="mt-3"
                                  @bind-Value="RegisterModel.Password" For="@(() => RegisterModel.Password)" InputType="InputType.Password"/>
                    <MudTextField Label="Password" HelperText="Repeat the password" Class="mt-3"
                                  @bind-Value="RegisterModel.ConfirmPassword" For="@(() => RegisterModel.ConfirmPassword)" InputType="InputType.Password"/>
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Register</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>

@code {

    private RegisterModel RegisterModel = new RegisterModel();
    private bool ShowErrors;
    private IEnumerable<string> Errors;

    private async Task HandleRegistration()
    {
        ShowErrors = false;

        var result = await AuthService.Register(RegisterModel);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            Errors = result.Errors;
            ShowErrors = true;
        }
    }

}
