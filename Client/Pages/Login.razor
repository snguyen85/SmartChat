@page "/login"
@inject SmartAuthenticationService AuthService
@inject NavigationManager NavigationManager

<h1>Login</h1>

<EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator/>
    <MudGrid>
        <MudItem xs="12" sm="7">
            <MudCard>
                <MudCardHeader>
                    <MudText Color="@Color.Error">
                        <ValidationSummary />
                        @if (ShowErrors)
                        {
                            @Error
                        }
                    </MudText>
                </MudCardHeader>
                <MudCardContent>
                    <MudTextField Label="Username" 
                                  @bind-Value="loginModel.Username" For="@(() => loginModel.Username)"/>
                    <MudTextField Label="Password" Class="mt-3"
                                  @bind-Value="loginModel.Password" For="@(() => loginModel.Password)" InputType="InputType.Password"/>
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Login</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>

@code {

    private LoginModel loginModel = new LoginModel();
    private bool ShowErrors;
    private string Error = "";

    private async Task HandleLogin()
    {
        ShowErrors = false;

        var result = await AuthService.Login(loginModel);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            Error = result.Error;
            ShowErrors = true;
        }
    }

}
